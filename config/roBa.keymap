#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt_to_layer_0 6 Q  &kp W         &kp E         &kp R                           &kp T                                                                         &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&mt LCTRL A         &kp S         &kp D         &kp F                           &kp G        &kp LS(LG(S))                             &kp MINUS              &kp H        &kp J  &kp K      &kp L    &kp QUESTION
&mt LEFT_SHIFT Z    &kp X         &kp C         &kp V                           &kp B        &kp LEFT_PARENTHESIS                      &kp RIGHT_PARENTHESIS  &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL           &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 7 LANG_KATAKANA  &lt 2 SPACE  &lt_to_layer_0 3 LANG_ZENKAKUHANKAKU      &kp BACKSPACE          &lt 1 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans     &trans  &trans  &trans  &trans                                           &kp AT_SIGN    &kp HASH          &kp AMPERSAND  &kp PERCENT        &kp F7
&kp LCTRL  &trans  &trans  &trans  &trans  &trans                &kp EXCLAMATION    &kp DOLLAR     &kp INT_YEN       &kp APOS       &kp DOUBLE_QUOTES  &kp F10
&trans     &trans  &trans  &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp LESS_THAN  &kp GREATER_THAN  &kp SEMICOLON  &kp COLON          &kp F6
&trans     &trans  &trans  &trans  &trans  &trans                &trans             &trans                                                             &kp F8
            >;
        };

        NUM {
            bindings = <
&kp SLASH  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp ASTERISK                                               &trans  &trans  &trans  &trans  &trans
&kp COMMA  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS     &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &trans  &trans  &trans  &trans  &trans
&kp DOT    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PLUS      &kp EQUAL                    &kp TILDE       &trans  &trans  &trans  &trans  &trans
&trans     &trans           &kp KP_NUMBER_0  &trans           &trans        &trans                       &trans          &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans              &trans  &trans               &kp K_MUTE
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp LA(LEFT_ARROW)  &trans  &kp LA(RIGHT_ARROW)  &kp C_VOLUME_UP
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans              &trans  &trans               &kp C_VOLUME_DOWN
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                   &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&kp LG(LEFT_ARROW)  &kp LC(L)      &kp LC(E)           &kp LC(R)  &kp LG(RIGHT_ARROW)                      &trans  &trans  &trans  &trans  &trans
&kp LC(A)           &kp LS(LG(S))  &kp LC(D)           &kp LC(F)  &kp LC(H)            &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LC(Z)           &kp LC(X)      &kp LC(C)           &kp LC(V)  &kp LC(B)            &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans              &trans         &kp LC(LA(DELETE))  &trans     &trans               &trans      &trans  &trans                          &trans
            >;
        };
    };
};
